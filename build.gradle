import org.gradle.util.GradleVersion

import static java.lang.Integer.parseInt

plugins {
    id 'nu.studer.plugindev' version '4.1'
    id 'com.gradle.plugin-publish' version '1.0.0'
    id 'org.nosphere.gradle.github.actions' version '1.3.2'
    id 'groovy'
}

group = 'nu.studer'
version = '4.1.1-DEV'

dependencies {
    testImplementation 'org.spockframework:spock-core:2.1-groovy-3.0'
}

tasks.withType(AbstractCompile).configureEach {
    options.compilerArgs <<
        "-Werror" <<
        "-Xlint:all"
}

tasks.withType(JavaCompile).configureEach {
    javaCompiler.set(javaToolchains.compilerFor { spec ->
        spec.languageVersion.set(JavaLanguageVersion.of(8))
        buildScan.value(identityPath.path + "#jvmVersion", spec.languageVersion.get().asInt() as String)
    } as Provider<? extends JavaCompiler>)
}

tasks.withType(Test).configureEach {
    maxParallelForks = 1 // there is currently only a single test class
    useJUnitPlatform()

    String testJavaRuntimeVersion = findProperty('testJavaRuntimeVersion') ?: '8'
    String testGradleVersion = findProperty('testGradleVersion') ?: GradleVersion.current().version

    javaLauncher.set(javaToolchains.launcherFor { spec ->
        spec.languageVersion.set(JavaLanguageVersion.of(testJavaRuntimeVersion))
        buildScan.value(identityPath.path + "#jvmVersion", testJavaRuntimeVersion)
    } as Provider<? extends JavaLauncher>)

    systemProperty 'testContext.gradleVersion', testGradleVersion
    buildScan.value(identityPath.path + "#gradleVersion", testGradleVersion)

    def incompatibleJavaVsGradleVersions = parseInt(testJavaRuntimeVersion) >= 16 && parseInt(testGradleVersion.substring(0, testGradleVersion.indexOf('.'))) < 7
    if (incompatibleJavaVsGradleVersions) {
        enabled = false
    }
}

gradlePlugin {
    plugins {
        pluginDevPlugin {
            id = 'nu.studer.plugindev'
            implementationClass = 'nu.studer.gradle.plugindev.PluginDevPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/etiennestuder/gradle-plugindev-plugin'
    vcsUrl = 'https://github.com/etiennestuder/gradle-plugindev-plugin'
    description = 'Gradle plugin that facilitates the bundling of Gradle plugins as expected by the Gradle Plugin Portal.'
    tags = ['plugin development']

    plugins {
        pluginDevPlugin {
            displayName = 'gradle-plugindev-plugin'
        }
    }

    mavenCoordinates {
        groupId = 'nu.studer'
        artifactId = 'gradle-plugindev-plugin'
    }
}
